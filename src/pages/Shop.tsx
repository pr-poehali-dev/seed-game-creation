import { useState } from "react";
import GameNavigation from "@/components/GameNavigation";
import Icon from "@/components/ui/icon";

interface ShopItem {
  id: number;
  name: string;
  price: number;
  icon: string;
  description: string;
  category: "seeds" | "tools" | "decorations";
}

const Shop = () => {
  const [selectedCategory, setSelectedCategory] = useState<
    "seeds" | "tools" | "decorations"
  >("seeds");
  const [coins] = useState(250); // –ò–≥—Ä–æ–≤–∞—è –≤–∞–ª—é—Ç–∞

  const shopItems: ShopItem[] = [
    // –°–µ–º–µ–Ω–∞
    {
      id: 1,
      name: "–°–µ–º–µ–Ω–∞ –º–æ—Ä–∫–æ–≤–∏",
      price: 10,
      icon: "ü•ï",
      description: "–ë—ã—Å—Ç—Ä–æ—Ä–∞—Å—Ç—É—â–∏–µ —Å–µ–º–µ–Ω–∞",
      category: "seeds",
    },
    {
      id: 2,
      name: "–°–µ–º–µ–Ω–∞ –ø–æ–º–∏–¥–æ—Ä–æ–≤",
      price: 15,
      icon: "üçÖ",
      description: "–°–æ—á–Ω—ã–µ –∫—Ä–∞—Å–Ω—ã–µ —Ç–æ–º–∞—Ç—ã",
      category: "seeds",
    },
    {
      id: 3,
      name: "–°–µ–º–µ–Ω–∞ —Ü–≤–µ—Ç–æ–≤",
      price: 20,
      icon: "üå∏",
      description: "–ö—Ä–∞—Å–∏–≤—ã–µ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç—ã",
      category: "seeds",
    },

    // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    {
      id: 4,
      name: "–õ–µ–π–∫–∞",
      price: 50,
      icon: "ü™£",
      description: "–î–ª—è –ø–æ–ª–∏–≤–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π",
      category: "tools",
    },
    {
      id: 5,
      name: "–õ–æ–ø–∞—Ç–∞",
      price: 75,
      icon: "üèóÔ∏è",
      description: "–î–ª—è –ø–æ—Å–∞–¥–∫–∏ –∏ –ø–µ—Ä–µ—Å–∞–¥–∫–∏",
      category: "tools",
    },

    // –£–∫—Ä–∞—à–µ–Ω–∏—è
    {
      id: 6,
      name: "–°–∞–¥–æ–≤—ã–π –≥–Ω–æ–º",
      price: 100,
      icon: "üßô",
      description: "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ —É–∫—Ä–∞—à–µ–Ω–∏–µ",
      category: "decorations",
    },
    {
      id: 7,
      name: "–§–æ–Ω—Ç–∞–Ω",
      price: 200,
      icon: "‚õ≤",
      description: "–ö—Ä–∞—Å–∏–≤—ã–π —Å–∞–¥–æ–≤—ã–π —Ñ–æ–Ω—Ç–∞–Ω",
      category: "decorations",
    },
  ];

  const categories = [
    { id: "seeds", name: "–°–µ–º–µ–Ω–∞", icon: "Sprout" },
    { id: "tools", name: "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã", icon: "Hammer" },
    { id: "decorations", name: "–£–∫—Ä–∞—à–µ–Ω–∏—è", icon: "Sparkles" },
  ];

  const filteredItems = shopItems.filter(
    (item) => item.category === selectedCategory,
  );

  const handlePurchase = (item: ShopItem) => {
    if (coins >= item.price) {
      // –õ–æ–≥–∏–∫–∞ –ø–æ–∫—É–ø–∫–∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–∑–∂–µ
      alert(`–í—ã –∫—É–ø–∏–ª–∏ ${item.name}!`);
    } else {
      alert("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!");
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-blue-50">
      <GameNavigation />

      <div className="pt-20 pb-8">
        <div className="container mx-auto px-4">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –±–∞–ª–∞–Ω—Å */}
          <div className="text-center mb-8">
            <h1 className="text-4xl font-bold text-green-700 mb-4">
              üõçÔ∏è –ú–∞–≥–∞–∑–∏–Ω
            </h1>
            <div className="inline-flex items-center bg-yellow-100 px-6 py-3 rounded-full border-2 border-yellow-300">
              <Icon name="Coins" size={24} className="text-yellow-600 mr-2" />
              <span className="text-xl font-bold text-yellow-700">
                {coins} –º–æ–Ω–µ—Ç
              </span>
            </div>
          </div>

          {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
          <div className="flex justify-center mb-8">
            <div className="bg-white rounded-full p-2 shadow-lg border-2 border-green-200">
              {categories.map((category) => (
                <button
                  key={category.id}
                  onClick={() => setSelectedCategory(category.id as any)}
                  className={`px-6 py-3 rounded-full transition-all duration-300 flex items-center space-x-2 mx-1 ${
                    selectedCategory === category.id
                      ? "bg-green-500 text-white shadow-lg"
                      : "text-green-700 hover:bg-green-100"
                  }`}
                >
                  <Icon name={category.icon} size={16} />
                  <span className="font-medium">{category.name}</span>
                </button>
              ))}
            </div>
          </div>

          {/* –¢–æ–≤–∞—Ä—ã */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredItems.map((item) => (
              <div
                key={item.id}
                className="bg-white rounded-2xl p-6 shadow-lg border-2 border-green-200 hover:shadow-xl transition-all duration-300 hover:scale-105"
              >
                <div className="text-center mb-4">
                  <div className="text-4xl mb-2">{item.icon}</div>
                  <h3 className="text-xl font-bold text-green-700 mb-2">
                    {item.name}
                  </h3>
                  <p className="text-gray-600 text-sm mb-4">
                    {item.description}
                  </p>

                  <div className="flex items-center justify-center mb-4">
                    <Icon
                      name="Coins"
                      size={20}
                      className="text-yellow-600 mr-1"
                    />
                    <span className="text-lg font-bold text-yellow-700">
                      {item.price}
                    </span>
                  </div>

                  <button
                    onClick={() => handlePurchase(item)}
                    disabled={coins < item.price}
                    className={`w-full py-3 rounded-full font-bold transition-all duration-300 ${
                      coins >= item.price
                        ? "bg-green-500 text-white hover:bg-green-600 hover:scale-105"
                        : "bg-gray-300 text-gray-500 cursor-not-allowed"
                    }`}
                  >
                    {coins >= item.price ? "–ö—É–ø–∏—Ç—å" : "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç"}
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Shop;
